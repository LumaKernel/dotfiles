{
  "tsdetect.doNothingIfConfigExists": false,
  "diagnostic.errorSign": ">>",
  "diagnostic.warningSign": "--",
  "diagnostic.infoSign": "..",
  "diagnostic.hintSign": "..",
  "coc.preferences.formatOnSaveFiletypes": [
    "go",
    "rust",
    "vue",
    "svelte",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "tf"
  ],
  "languageserver": {
    "terraform": {
      "command": "terraform-ls",
      "args": ["serve"],
      "filetypes": ["terraform", "tf"],
      "initializationOptions": {}
    }
  },
  "diagnostic-languageserver.linters": {
    "hadolint": {
      "command": "hadolint",
      "sourceName": "hadolint",
      "args": [
        "-f",
        "json",
        "-"
      ],
      "parseJson": {
        "line": "line",
        "column": "column",
        "security": "level",
        "message": "${message} [${code}]"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "info": "info",
        "style": "hint"
      }
    },
    "shellcheck": {
      "command": "shellcheck",
      "debounce": 100,
      "args": [
        "--format",
        "json",
        "-x",
        "-"
      ],
      "sourceName": "shellcheck",
      "parseJson": {
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${code}]",
        "security": "level"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "info": "info",
        "style": "hint"
      }
    }
  },
  "diagnostic-languageserver.filetypes": {
    "sh": "shellcheck",
    "dockerfile": "hadolint"
  },
  "coc.source.neosnippet.priority": 40,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "tsserver.formatOnType": true,
  "eslint.format.enable": true,
  "eslint.autoFixOnSave": true,
  "emmet.priority": 30,
  "deno.codeLens.references": true,
  "deno.codeLens.referencesAllFunctions": true,
  "deno.codeLens.implementations": true,
  "codeLens.enable": true,
  "go.goplsOptions": {
    "staticcheck": true
  },
  "prettier.onlyUseLocalVersion": true
}
