
# NOTE : man tmux
#   - KEY BINDINGS でデフォルトのキーバインドが見れる

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-resurrect'

set-option -g prefix C-k
unbind-key C-b
bind-key C-k send-prefix

set-option -ga update-environment RUN_VIM

set-option -sg escape-time 0

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left ""
set-option -g status-right "#(~/bin/tmux-powerline/powerline.sh right)"
# TODO どうにかする
set-window-option -g window-status-separator ""
set-window-option -g window-status-current-format "#[fg=colour255, bg=colour27] #I #W #[fg=colour27, bg=colour251]| #[fg=colour27, bg=colour251]"
set-window-option -g window-status-format "#[fg=colour233, bg=colour251] #I #W #[fg=colour233, bg=colour251]| #[fg=colour27, bg=colour251]"

set-option -g status-fg white
set-option -g status-bg black

set-option -g base-index 1
set-window-option -g pane-base-index 1

bind-key r source-file ~/.tmux.conf \; display "tmux configuration reloaded."

bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key -n M-\\ split-window -h -c "#{pane_current_path}"
bind-key -n M-- split-window -v -c "#{pane_current_path}"

bind-key c new-window -c "#{pane_current_path}"

bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R
bind-key -n M-J select-pane -D
bind-key -n M-K select-pane -U
bind-key -n M-H select-pane -L
bind-key -n M-L select-pane -R
bind-key -n M-j run 'bash ~/dotfiles/tmux/vim-tmux-move.sh j'
bind-key -n M-k run 'bash ~/dotfiles/tmux/vim-tmux-move.sh k'
bind-key -n M-h run 'bash ~/dotfiles/tmux/vim-tmux-move.sh h'
bind-key -n M-l run 'bash ~/dotfiles/tmux/vim-tmux-move.sh l'
bind-key -n Ô select-pane -D
bind-key -n  select-pane -U
bind-key -n Ó select-pane -L
bind-key -n Ò select-pane -R
bind-key -n ∆ run 'bash ~/dotfiles/tmux/vim-tmux-move.sh j'
bind-key -n ˚ run 'bash ~/dotfiles/tmux/vim-tmux-move.sh k'
bind-key -n ˙ run 'bash ~/dotfiles/tmux/vim-tmux-move.sh h'
bind-key -n ¬ run 'bash ~/dotfiles/tmux/vim-tmux-move.sh l'

bind-key n select-window -t:+
bind-key p select-window -t:-
bind-key -n M-n select-window -t:+
bind-key -n M-p select-window -t:-
bind-key -n ˜ select-window -t:+
bind-key -n π select-window -t:-

bind-key -n M-C-h resize-pane -L 3
bind-key -n M-C-j resize-pane -D 3
bind-key -n M-C-k  resize-pane -U 3
bind-key -n M-C-l  resize-pane -R 3
bind-key H resize-pane -L 7
bind-key J resize-pane -D 7
bind-key K resize-pane -U 7
bind-key L resize-pane -R 7

bind-key -n M-C-n swap-window -t +1 \; select-window -t:+
bind-key -n M-C-p swap-window -t -1 \; select-window -t:-

set-window-option -g mode-key vi

set-option -g default-terminal "screen-256color"

# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg red
# set-window-option -g window-status-current-attr bright

# set-option -g pane-active-border-fg white
# set-option -g pane-active-border-bg yellow

bind-key -T copy-mode-vi v send-keys -X begin-selection

# if-shell 'test "$(uname -a | grep microsoft)" != ""' 'bind-key -T copy-mode-vi Enter copy-pipe "cat | clip.exe"'
if-shell 'test "$(uname -a | grep microsoft)" != ""' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "cat | clip.exe"'

run -b '~/.tmux/plugins/tpm/tpm'
# <prefix>I  : install
# <prefix>U  : update
