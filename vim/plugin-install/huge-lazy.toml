[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = { xn = '<Plug>(LiveEasyAlign)' }
hook_add = '''
xmap ga <Plug>(LiveEasyAlign)
nmap ga <Plug>(LiveEasyAlign)
'''

[[plugins]]
repo = 'mattn/emmet-vim'
# on_ft = [
#   'markdown',
#   'html',
#   'rust',
#   'javascript',
#   'jsx',
#   'javascriptreact',
#   'typescript',
#   'tsx',
#   'typescriptreact',
#   'vue',
#   'svelte',
# ]
on_path = [
  '\.mdx\?$',
  '\.tsx\?$',
  '\.jsx\?$',
  '\.vue$',
  '\.svelte$',
  '\.rs$',
  '\.htm$',
  '\.html$',
  '\.xml$',
  '\.xml$',
]
# for preact
# let g:user_emmet_settings = emmet#merge(get(g:, 'user_emmet_settings'), { 'jsx': { 'attribute_name': {'class': 'class'}}})
hook_add = '''
" let g:user_emmet_install_global = 0
let g:user_emmet_leader_key = v:false
'''

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_map = ['gS', 'gJ']
# gS : split
# gJ : join

# 重いときに j/k を叩きまくった後の硬直を緩和してくれる
[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>(accelerated_jk'}
hook_add = '''
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)
nmap gj <Plug>(accelerated_jk_j)
nmap gk <Plug>(accelerated_jk_k)
'''

[[plugins]]
repo = 'LumaKernel/vim-goimports'
on_ft = 'go'
hook_add = '''
let g:goimports_simplify = 1
let g:goimports_loclist = 0
'''

# Python Import Improvement
[[plugins]]
repo = 'relastle/vim-nayvy'
on_ft = "python"
hook_add = '''
let g:nayvy_import_path_format = 'all_absolute'
'''

[[plugins]]
# Zl: 候補から修正
# ZL: 候補からbuffer内全修正
# Zc/ZC: 入力して修正
# Zf/ZF: 最初の候補で修正
# Zg: good
# Zw: wrong
# Zug: undo good
# Zuw: undo wrong
repo = 'kamykn/spelunker.vim'
hook_add = '''
let &spellfile = expand('$HOME/dotfiles/vim/spellfile.utf-8.add')
let g:spelunker_spell_bad_group = 'Warning'
let g:spelunker_complex_or_compound_word_group = 'Warning'
let g:enable_spelunker_vim = 1

let g:spelunker_disable_auto_group = 1

function! SpelunkerInit(...) abort
  if !empty(getcmdwintype())
    return
  endif
  if line('$') < 2000
    call spelunker#check()
  endif
endfunction

augroup my_spelunker
  autocmd!
  autocmd BufWinEnter,BufWritePost,CursorHold * ++nested call SpelunkerInit()
augroup END
'''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {n = '<Plug>'}
hook_add = '''
nmap J <Plug>(jplus)
'''

[[plugins]]
repo = 'wuelnerdotexe/vim-astro'
on_ft = 'astro'
hook_add = '''
let g:astro_typescript = 'enable'
'''

# [[plugins]]
# repo = 'Julian/lean.nvim'
# depends = ['plenary.nvim']
# on_ft = 'lean'
# hook_source = '''
# lua <<EOF
# require('lean').setup {
#   lsp = { enable = true },
#   mappings = false,
# }
# EOF
# '''

[[plugins]]
repo = 'lambdalisue/reword.vim'
on_map = ':'

[[plugins]]
repo = 'vim-skk/skkeleton'
lua_add = '''
local group = vim.api.nvim_create_augroup('skkeleton-initialize-pre', { clear = true })
vim.api.nvim_create_autocmd({ 'User' }, {
  pattern = 'skkeleton-initialize-pre',
  group = group,
  callback = function()
    vim.fn['skkeleton#config']({
      eggLikeNewline = true,
    })
    -- vim.fn['skkeleton#register_kanatable']('rom', {
    --   -- ['z '] = {'\u3000', ''},
    --   -- ['z '] = {''},
    -- })
  end,
})

-- TODO
-- vim.keymap.set({'i', 'c', 't'}, '<C-a>', '<Plug>(skkeleton-toggle)')
'''
