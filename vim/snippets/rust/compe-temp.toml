[temp]
prefix = ['temp', 'cp_temp']
body = """
#![allow(unused_imports, non_snake_case, unused_variables, dead_code)]
use proconio::input;
#[rustfmt::skip]
use std::collections::{BinaryHeap, HashMap, HashSet, VecDeque};
// use rec_macro::rec;

fn main() {
    input! {
      N: usize,
      A: [i64; N],
      X: [(i64, i64); N],
    };

    println!("{}", A.iter().sum::<i64>());
}
"""

[temp-interactive]
prefix = ['temp-interactive']
body = """
#![allow(unused_imports, non_snake_case, unused_variables, dead_code)]
use proconio::{input, source::line::LineSource};
#[rustfmt::skip]
use std::collections::{BinaryHeap, HashMap, HashSet, VecDeque};

fn main() {
    let stdin = stdin();
    let mut source = LineSource::new(BufReader::new(stdin.lock()));

    input! {
        from &mut source,
        n: usize,
    }
}

fn query<R: BufRead>(x: usize, source: &mut LineSource<R>) -> usize {
    println!("{}", x);
    stdout().flush().unwrap();
    input! {
        from source,
        y: usize,
    }
    y
}
"""
