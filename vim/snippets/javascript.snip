snippet node-debug
alias debug-node
alias file-debug
  import * as fs from "fs";
  import * as util from "util";
  import * as path from "path";
  import { homedir } from "os";

  const debugLogFile = path.resolve(homedir(), "node-debug.log");

  export const dump = (obj) => {
    fs.appendFileSync(
      debugLogFile,
      `"\x60"`${new Date().toLocaleTimeString()}: ${util.inspect(obj)}\n`"\x60"`,
    );
  };

snippet     eslint-typescript-sub
alias       subdirectory-typescript-eslint
options     head
  const path = require('path');

  /** @type {import('eslint').Linter.Config} */
  module.exports = {
    override: {
      files: ['*.ts'],
      parserOptions: {project: path.resolve(__dirname, 'tsconfig.json')},
    },
  };

snippet     esm-this-dir
alias       dirname-esm
options     head
  import {resolve, dirname} from 'path'
  import {fileURLToPath} from 'url'
  resolve(dirname(fileURLToPath(import.meta.url)), "foo");

snippet     esm-this-dir-2
alias       dirname-esm-2
options     head
  import * as path from 'path'
  import * as url from 'url'
  path.resolve(path.dirname(url.fileURLToPath(import.meta.url)), "foo");

snippet     eslint-linter-config
alias       eslint-type-jsdoc
alias       type-eslint-jsdoc
alias       jsdoc-eslint-type
options     head
  /** @type {import('eslint').Linter.Config} */

snippet     jest-config
alias       jest-type-jsdoc
alias       type-jest-jsdoc
alias       jsdoc-jest-type
options     head
  /** @type {import('@jest/types').Config} */

snippet     snowpack-config
alias       snowpack-type-jsdoc
alias       type-snowpack-jsdoc
alias       jsdoc-snowpack-type
options     head
  /** @type {import('snowpack').SnowpackUserConfig} */
